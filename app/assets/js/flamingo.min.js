/*!
 * flamingo
 * An Image editor for Browser with canvas
 * 
 * @author Fisherman
 * @version 0.0.1
 * Copyright 2017. MIT licensed.
 */
!function(i,n){"use strict";function e(i,n){return this.constructor(i,n)}e.prototype={containerElement:null,canvas:null,image:null,sourceCanvas:null,sourceImage:null,originalImageElement:null,transformations:[],defaults:{minWidth:null,minHeight:null,maxWidth:null,maxHeight:null,ratio:null,backgroundColor:"#fff",plugins:{},initialize:function(){}},plugins:{},options:{},constructor:function(i,e,a){if(this.options=Darkroom.Utils.extend(e,this.defaults),"string"==typeof i&&(i=n.querySelector(i)),null!==i){var t=new Image;t.onload=function(){this._initializeDOM(i),this._initializeImage(),this._initializePlugins(Darkroom.plugins),this.refresh(function(){this.options.initialize.bind(this).call()}.bind(this))}.bind(this),t.src=i.src}},_initializeDOM:function(i){var e=n.createElement("div");e.className="darkroom-container";var a=n.createElement("div");a.className="darkroom-toolbar",e.appendChild(a);var t=n.createElement("div");t.className="darkroom-image-container";var o=n.createElement("canvas");t.appendChild(o),e.appendChild(t);var r=n.createElement("div");r.className="darkroom-source-container",r.style.display="none";var l=n.createElement("canvas");r.appendChild(l),e.appendChild(r),i.parentNode.replaceChild(e,i),i.style.display="none",e.appendChild(i),this.containerElement=e,this.originalImageElement=i,this.toolbar=new Darkroom.UI.Toolbar(a),this.canvas=new fabric.Canvas(o,{selection:!1,backgroundColor:this.options.backgroundColor}),this.sourceCanvas=new fabric.Canvas(l,{selection:!1,backgroundColor:this.options.backgroundColor})}}}(window,document),function(){"use strict";var i=new Flamingo("#target",{minWidth:100,minHeight:100,maxWidth:600,maxHeight:500,ratio:4/3,backgroundColor:"#000",plugins:{crop:{quickCropKey:67}},initialize:function(){var i=this.plugins.crop;i.requireFocus()}});i.init()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
