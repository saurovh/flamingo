/*!
 * flamingo
 * An Image editor for Browser with canvas
 * 
 * @author Fisherman
 * @version 0.0.1
 * Copyright 2017. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%;background:radial-gradient(ellipse at center,#f7f6f0 0,#c2ba8c 80%,#b0a66b 100%)}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.bg-white{background:#fff}.bg-orange{background:#f77727}.col-white{color:#fff}.col-orange{color:#f77727}.bdbox{box-sizing:border-box}.txt-ovf{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.tdn{text-decoration:none}.db,.sidenav ul li a{display:block}.dinb,.effect-btn button,.main .effect-range .s-btn{display:inline-block}.dn{display:none}.prel{position:relative}.pabs{position:absolute}.header,.pfix,.sidebar{position:fixed}.tl{text-align:left}.tr{text-align:right}.tc{text-align:center}.cd{cursor:default}.cp,.effect-btn button,.main .effect-range .s-btn:hover{cursor:pointer}.header{width:100%;height:50px;background-color:#4caf50;margin:0;padding:0;top:0}.logo{margin:-58px 0 0 -100px;position:absolute;top:50%;left:50%}.nav ul{list-style:none}.sidebar{width:80px;height:100vh;background-color:#ededed;top:50px;background-color:#263238}.sidenav{margin-top:20px;padding:0;width:100%;border-top:1px solid #ededed}.sidenav ul{margin:0;padding:0;list-style:none}.sidenav ul li{width:100%;height:70px;border-bottom:1px solid #ededed}.sidenav ul li a{padding:10px 0;text-align:center;text-decoration:none}.sidenav ul li a i{font-size:20px;color:#fff;margin:5px 0;clear:both}.sidenav ul li a .mtl{margin:5px 0;font-size:12px;line-height:15px;margin:0;color:#fff}.sidenav ul li a:hover .mtl,.sidenav ul li a:hover i{color:#f77727}.sidenav ul li:hover{background-color:#fff}.main{margin:100px 50px 50px 130px;border-radius:10px;min-height:100vh}.main .canvas-area,.main .effect-range,.main .filter-area,.main .mcomn{background-color:#fff;border:1px solid #b0a66b;border-radius:10px;padding:15px;margin:15px 0}.main .effect-range{min-height:150px;display:table;width:100%}.main .effect-range .s-btn-group{display:table-cell;vertical-align:middle;text-align:right}.main .effect-range .s-btn{color:#000;background-color:#fff;border:1px solid #ccc;border-radius:8px;padding:7px 24px;margin:0 5px;text-align:center}.main .effect-range .s-btn:hover{background-color:#4caf50;border:1px solid #468d49;color:#fff}.main .canvas-area{min-height:400px}.main .filter-area{min-height:150px}.mianimg{width:600px;margin:0 auto;padding:0}.mianimg img{width:100%;border:1px solid #ededed}.effect-btn{text-align:center}.effect-btn button{background-color:#4caf50;border:1px solid #468d49;padding:7px 24px;text-align:center;color:#fff;margin:0 5px 10px}.effect-btn button:hover{background-color:#468d49;transition:background-color .2s linear;box-shadow:0 8px 16px 0 rgba(93,89,89,.2),0 6px 24px 0 rgba(81,79,79,.19)}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
